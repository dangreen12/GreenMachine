# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# RP2040 with "USB" or "CAN bus (on gpio4/gpio5)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan]
#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid: 290eebdaef55

[temperature_sensor EBB_Temp]
sensor_type: Generic 3950
sensor_pin: EBBCan:gpio28

[adxl345]
cs_pin: EBBCan:gpio1
spi_software_sclk_pin: EBBCan:gpio2
spi_software_mosi_pin: EBBCan:gpio0
spi_software_miso_pin: EBBCan:gpio3
axes_map: z,-y,x

[resonance_tester]
probe_points: 175, 175, 10
accel_chip: adxl345

[thermistor HT-NTC100K-B3950]
temperature1: 25
resistance1: 103180
temperature2: 150
resistance2: 1366.2
temperature3: 250
resistance3: 168.6

[extruder]
step_pin: EBBCan:gpio18
dir_pin: EBBCan:gpio19
enable_pin: !EBBCan:gpio17
microsteps: 16

rotation_distance: 22.6789511
gear_ratio: 50:10 #CW2 Gear Ratio
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree

nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 100.0  # or any other desired value

heater_pin: EBBCan:gpio7

sensor_type: HT-NTC100K-B3950
sensor_pin: EBBCan:gpio27

#sensor_type: MAX31865
#sensor_pin: EBBCan:gpio9
#spi_software_sclk_pin: EBBCan:gpio10
#spi_software_mosi_pin: EBBCan:gpio8
#spi_software_miso_pin: EBBCan:gpio11
#rtd_nominal_r: 100
#rtd_reference_r: 430
#rtd_num_of_wires: 2
#control: pid
#pid_Kp=20.457 
#pid_Ki=1.057
#pid_Kd=98.957

min_temp: 0
max_temp: 300
min_extrude_temp: 190

[tmc2209 extruder]
uart_pin: EBBCan:gpio20
run_current: 0.650
stealthchop_threshold: 999999

[fan]
pin: EBBCan:gpio13
kick_start_time: 0.25
hardware_pwm: false
cycle_time: 0.01
off_below: 0.05

[heater_fan hotend_fan]
pin: EBBCan:gpio14
heater: extruder
heater_temp: 50.0

###################################
#    Tap Probe
###################################

[probe]
pin: ^EBBCan:gpio22
x_offset: 0
y_offset: 0
#z_offset: -1.150
speed: 10
samples: 3
samples_result: median
sample_retract_dist: 5.0
samples_tolerance: 0.008
samples_tolerance_retries: 3

# Tap code:
activate_gcode:
    _STATUS_CALIBRATING_Z
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    _STATUS_READY
    {% endif %}

###################################
# 	BTT Filament Sensor 
#   https://github.com/bigtreetech/smart-filament-detection-module
###################################

#[filament_motion_sensor filament_sensor]
#detection_length: 10.00 ; This can be adjusted to your desired level of sensitivity. 10 is a recomended value to prevent flow dropoff false triggers.
#extruder: extruder
#switch_pin: ^EBBCan:gpio21
#pause_on_runout: True ; This can be set to false to debug false positives putting the sensor in "monitor mode". The printer will not pause but it will run the runout_gcode below. 
#event_delay: 3.0
#pause_delay: 0.5
#runout_gcode:
#    M117 Runout Detected!

#[filament_switch_sensor filament_sensor]
#switch_pin: ^EBBCan:
#pause_on_runout: False  # set to False to disable sensor
#runout_gcode:
#    M117 Runout Detected!
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.



